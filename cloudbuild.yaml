# Google Cloud Run Configuration
# File: cloudbuild.yaml

steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/fertivision:$COMMIT_SHA', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/fertivision:$COMMIT_SHA']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'fertivision'
      - '--image'
      - 'gcr.io/$PROJECT_ID/fertivision:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '100'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'FLASK_ENV=production,DEBUG_MODE=true'
      - '--labels'
      - 'app=fertivision,env=production,deployed-by=cloud-build'
  
  # Test deployment
  - name: 'gcr.io/cloud-builders/curl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üß™ Testing deployment..."
        SERVICE_URL=$$(gcloud run services describe fertivision --region=us-central1 --format="value(status.url)")
        echo "üåê Service URL: $$SERVICE_URL"
        echo "üè• Testing health endpoint..."
        curl -f "$$SERVICE_URL/health" || exit 1
        echo "‚úÖ Deployment test passed!"

images:
  - 'gcr.io/$PROJECT_ID/fertivision:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
